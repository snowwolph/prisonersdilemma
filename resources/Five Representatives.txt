Rule 6

      FUNCTION K60R(J,M,K,L,R, JA)
C BY JIM GRAASKAMP AND KEN KATZEN
C FROM CARDS BY JM 2/22/79
    k60r=ja    ! Added 7/27/93 to report own old value
      IF (M-1)1,1,2
1     ID=0
      K60R=0
      GO TO 50
2     IF (ID-1)3,4,4
3     K60R=J
      IF (M-11)50,5,6
5     IF (K-23)51,50,50
6     IF (M-21)50,7,8
7     IF(K-53)51,50,50
8     IF (M-31)50,9,10
9     IF (K-83)51,50,50
10    IF (M-41)50,11,12
11    IF (K-113)51,50,50
12    IF (M-51)50,13,14
13    IF (K-143)51,50,50
14    IF (M-101)50,15,50
15    IF (K-293)51,50,50
51    ID=1
4     K60R=1
50    RETURN
      END

Rev. State Transition (30)

    FUNCTION K91R(J,M,K,L,R, JA)
C BY JONATHAN PINKLEY
C MODIFIED FROM K15C BY JM 3/27/79
      DIMENSION IPOL(11,4), QC(4), QN(4), E(11)
    k91r=ja    ! Added 7/27/93 to report own old value
      IF (M .NE. 1) GO TO 30
C INITIAL BELIEFS
      X = .999
      PX = .001
      Y = .001
      PY = .999
      Z = .999
      PZ = .001
      W = .001
      PW = .999
      QC(1) = 1.999
      QC(2) =1.999
      QC(3) = 0.001
      QC(4) = 0.001
      DO 10 N = 1, 4
   10 QN(N) = 2
C DEFINE POLICIES(FIRST,WHAT IF OUTCOME=1)
      DATA IPOL /4*0, 7*1, 0, 3*1, 3*0, 4*1, 3*0, 1, 2*0, 1, 0, 0, 1, 1,
     1 2*0, 1, 0, 0, 1, 0, 0, 1, 0, 1/
       IOLD=0
      K91R = 0
      N = 0
      GO TO 100
C UPDATE STATS OF HIS CONTINGENCIES
C N IS OUTCOME OF M-2
   30 IF (M .LE. 2) GO TO 100
      IF (J .EQ. 0) QC(N) = QC(N) + 1
      QN(N) = QN(N) + 1
C REVERSE  Y AND Z
      GO TO (40, 60, 50, 70), N
   40 X = QC(1) / QN(1)
      PX = 1 - X
      GO TO 100
   50 Y = QC(3) / QN(3)
      PY = 1 - Y
      GO TO 100
   60 Z = QC(2) / QN(2)
      PZ = 1 - Z
      GO TO 100
   70 W = QC(4) / QN(4)
      GO TO 100
C CALC EXPECTATIONS OF POLICIES
  100 E(1) = (3*Z) / (Z + PX)
      E(2) = (3*(Y*Z + W*PZ) + 5*Z*PX + PX*PZ) / (Y*Z + W*PZ + PX + Z*
     1 PX + PX*PZ)
      E(3) = (3*W*Y + 5*W*PX + PX*PZ) / (W*Y + 2*W*PX + PX*PZ)
      E(4) = (3*W*PY + 5*Z*PX + PX*PY) / (W*PY + PX*PY + Z*PX + PX*PY)
      E(5) = (3*Z + 5*X*Z + Z*PX) / (1 - X*Y - W*PX + 2*Z)
      E(6) = (8*W*Z + Z*PX) / (2*W*Z + W*PY + Z*PX)
      E(7) = (3*Z*PY + 5*X*Z + Z*PY) / (2*Z*PY + PW*PY + X*Z)
      E(8) = (3*(Y*Z + W*PZ) + 5*(Z*PW + W*X) + 1 - X*Y - Z*PY) /(Y *Z +
     1 W*PZ + 2 - 2*X*Y - W*PX + Z*PW + W*X - Z*PY)
      E(9) = (3*W*Y + 5*W + 1 - X*Y - Z*PY) / (2*W + 1 - X*Y - Z*PY)
      E(10) = (3*W*PY + 5*(Z*PW + W*X) + PY) / (PY + Z*PW + W*X + PY)
      E(11) = (5*W + PY) / (W + PY)
C FIND POL WITH MAX E
      IBEST = 1
      BESTE = E(1)
      DO 80 I = 2, 11
        IF (E(I) .LE. BESTE) GO TO 80
        IBEST = I
        BESTE = E(I)
   80 CONTINUE
C CALC OUTCOME FOR USE IN CHOICE AND NEXT MV STATS
   90 N = 2 *  IOLD + J + 1
C CHOICE(CHOSEN POLICY,PREV OUTCOME)
      K91R = IPOL(IBEST,N)
       IOLD=K91R
      RETURN
      END


Rule 35

       FUNCTION K40R(J,M,K,L,R, JA)
C BY ROBERT ADAMS
C EDITED FROM BASIC BY AX, 1,18,79
    k40r=ja    ! Added 7/27/93 to report own old value
      IF(M.NE.1) GO TO 505
      S=3
      W=0
      Q=.8
  505 S=S+1
      IF(J.NE.1) GO TO 510
      W=W+1
      Q=Q/2
  510 IF(M.GE.3) GO TO 520
      K40R=0
      RETURN
  520 IF(J.EQ.1) GO TO 522
      GO TO 530
  522 W=W+1
      IF(W.GT.2.AND.(W/3.EQ.IFIX(W/3)).OR.(W-1)/3.EQ.IFIX((W-1)/3)) GO TO 901
      GO TO 550
  901 S=1
      Q=Q/2
      GO TO 580
  530 GO TO 580
  550 IF(R.GE.Q) GO TO 560
      K40R=0
      Q=Q/2
      RETURN
  560 Q=Q/2
      K40R=1
      RETURN
  580 IF(S.EQ.1.OR.S.EQ.2) GO TO 1000
c Ax added ()
  590 IF(W.GT.2.AND.(W/3.EQ.IFIX(W/3).OR.(W-1)/3.EQ.IFIX((W-1)/3)))
     1GO TO 901
      K40R=0
      RETURN
 1000 K40R=1
      RETURN
    END

Tester (46)

      FUNCTION K76R(J,M,K,L,R,JA)
C BY DAVID GLADSTEIN
C FROM CARDS BY JM 3/16/79
      LOGICAL PATSY
      K76R=JA       ! Added 7/32/93 to report own old value
      IF (M .NE. 1) GO TO 1
      PATSY = .TRUE.
      DC = 0
      MDC = 0
      G = 1
      K76R = 1
      RETURN
1     IF (PATSY) GO TO 2
      K76R = J
      RETURN
2     IF (J .NE. 1) GO TO 3
      PATSY = .FALSE.
      K76R = 0
      RETURN
3     DC = DC + 1
      IF (G .EQ. 0) MDC = MDC + 1
      G = 0
      IF (MDC / (DC + 1) .GE. .5) G = 1
      K76R = G
      RETURN
      END

Tranquilizer (27)

    FUNCTION K67R(J,M,K,L,R,JA)
C EDITED FROM BASIC FROM AX. 3/10/79
C TYPED BY JM 3/16/80
C BY CRAIG FEATHERS
      REAL NO,NK
      K67R=JA       ! Added 7/32/93 to report own old value
      IF (M .NE. 1) GOTO 510
      S = 0
      AD = 5
      NO = 0
      NK = 1
      AK = 1
      FD = 0
      C = 0
510   IF (FD .NE. 2) GOTO 520
      FD = 0
      NO = (NO * NK + 3 - 3 * J + 2 * K67R - K67R * J) / (NK + 1)
      NK = NK + 1
520   IF (FD .NE. 1) GOTO 530
      FD = 2
      AD = (AD * AK + 3 - 3 * J + 2 * K67R - K67R * J) / (AK + 1)
      AK = AK + 1
530   IF (J .EQ. 0) GOTO 540
      S = S + 1
      GOTO 545
540   S = 0
      C = C + 1
545   K67R = 0
      IF (ABS(FD - 1.5) .EQ. .5) GOTO 599
      IF (K .LT. 2.25 * M) GOTO 575
      P = .95 - (AD + NO - 5) / 15 + 1./ M**2 - J / 4.
      IF (R .LE. P) GOTO 599
      K67R = 1
      FD = 1
      GOTO 599
575   IF (K .LT. 1.75 * M) GOTO 595
      P = .25 + C / M - S * .25 + (K - L) / 100. + 4. / M
      IF (R .LE. P) GOTO 599
      K67R = 1
      GOTO 599
595   K67R = J
599   RETURN
      END

